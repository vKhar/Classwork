<p>a)&nbsp;</p><p>i) Pre-order</p><p>ii) By the order of medians in an array of all the elements in ascending order. Binary search is done on the array to locate the medians of the smaller and smaller subarrays, and when the median of the subarrays are found, it is inserted into the BST.</p><p>b) The time complexity of finding a node in the BST above is O(log n). This is the case because the BST is fairly balanced with the height difference between the right and left subtree being only less than 1. So, instead of needing to loop through n number of nodes, the algorithm will only need to loop through log n times which gives it a O(log n) time complexity.</p><p>c) The time complexity of the BST may deteriorate as it gets more unbalanced. The way a BST can get unbalanced is when the data that is being inserted is accumulating towards one subtree of the BST. This can be because the data being inserted is getting larger and larger or smaller and smaller over time. This culminates in the BST being unbalanced due to the height difference between the left subtree and the right subtree being more than 1.</p><p>d) 10, 55, 21, 75, 67, 79, 83, 92, 84, 79</p><p>&nbsp;</p>